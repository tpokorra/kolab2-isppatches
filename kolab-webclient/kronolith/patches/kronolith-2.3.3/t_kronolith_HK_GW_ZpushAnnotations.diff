From: Gunnar Wrobel <p@rdus.de>
Subject: [PATCH] t/kronolith/HK/GW/ZpushAnnotations

Allows to modify the Zpush configuration.

Signed-off-by: Gunnar Wrobel <p@rdus.de>

diff -Naur a/calendars/edit.php b/calendars/edit.php
--- a/calendars/edit.php	2010-05-04 22:00:35.670897983 +0200
+++ b/calendars/edit.php	2010-05-06 07:45:36.406431213 +0200
@@ -26,10 +26,6 @@
     $notification->push($calendar, 'horde.error');
     header('Location: ' . Horde::applicationUrl('calendars/', true));
     exit;
-} elseif ($calendar->get('owner') != Auth::getAuth()) {
-    $notification->push(_("You are not allowed to change this calendar."), 'horde.error');
-    header('Location: ' . Horde::applicationUrl('calendars/', true));
-    exit;
 }
 $form = new Kronolith_EditCalendarForm($vars, $calendar);
 
@@ -57,6 +56,25 @@
 if (isset($params['fbrelevance'])) {
     $vars->set('fbrelevance', $params['fbrelevance']);
 }
+if (isset($params['activesync'])) {
+    if ($params['activesync']['NAMESPACE'] == Horde_Kolab_Storage_Namespace::PERSONAL) {
+        $default = 1;
+    } else {
+        $default = 0;
+    }
+    require_once 'Horde/Kolab/Storage.php';
+    $folder = Kolab_Storage::getFolder('INBOX');
+    $result = $folder->getActiveSync();
+    $devices = isset($result['DEVICE']) ? $result['DEVICE'] : null;
+    if (!empty($devices)) {
+        $folders = $params['activesync']['FOLDER'];
+        $vars->set('activesync_devices', implode('|', array_keys($devices)));
+        foreach ($devices as $id => $config) {
+            $vars->set('activesync_' . $id, isset($folders[$id]['S']) ? $folders[$id]['S'] : $default);
+        }
+        $form->activeSyncSegment($devices);
+    }
+}
 $title = $form->getTitle();
 require KRONOLITH_TEMPLATES . '/common-header.inc';
 require KRONOLITH_TEMPLATES . '/menu.inc';
diff -Naur a/lib/Forms/EditCalendar.php b/lib/Forms/EditCalendar.php
--- a/lib/Forms/EditCalendar.php	2010-05-04 22:00:36.210910903 +0200
+++ b/lib/Forms/EditCalendar.php	2010-05-05 10:30:48.073386331 +0200
@@ -40,22 +40,57 @@
         parent::Horde_Form($vars, sprintf(_("Edit %s"), $calendar->get('name')));
 
         $this->addHidden('', 'c', 'text', true);
-        $this->addVariable(_("Name"), 'name', 'text', true);
+        if ($this->_calendar->get('owner') != Auth::getAuth()) {
+            $this->addVariable(_("Name"), 'name', 'text', false, true);
+            $this->addVariable(_("Description"), 'description', 'longtext', false, true);
+        } else {
+            $this->addVariable(_("Name"), 'name', 'text', true);
+            $this->addVariable(_("Description"), 'description', 'longtext', false, false, null, array(4, 60));
+        }
-        $this->addVariable(_("Description"), 'description', 'longtext', false, false, null, array(4, 60));
-        $this->addVariable(_("Relevance"), 'fbrelevance', 'radio', false, false, null, 
-                           array(array(_("owners/administrators"), _("readers"), _("no one")), 
-                                 'This calendar is only included into the free/busy data for ...'));
+        if ($this->_calendar->get('owner') == Auth::getAuth()) {
+            $this->addVariable(_("Relevance"), 'fbrelevance', 'radio', false, false, null, 
+                               array(array(_("owners/administrators"), _("readers"), _("no one")), 
+                                     'This calendar is only included into the free/busy data for ...'));
+        }
 
         $this->setButtons(array(_("Save")));
     }
 
+    function activeSyncSegment($devices)
+    {
+        $this->addHidden('', 'activesync_devices', 'text');
+        $this->addVariable('', '', 'spacer');
+        $this->addVariable(_("Synchronization options for ActiveSync devices"), '', 'header');
+        foreach ($devices as $id => $config) {
+            $this->addVariable(sprintf("Device \"%s\"", $id), 'activesync_' . $id, 'radio', false, false, null, 
+                           array(array(_("does not synchronize with this calendar"), _("synchronizes with this calendar but ignores alarms"), _("synchronizes with this calendar including alarms"))));
+        }
+    }
+
     function execute()
     {
-        $original_name = $this->_calendar->get('name');
-        $new_name = $this->_vars->get('name');
-        $this->_calendar->set('name', $new_name);
         $this->_calendar->set('desc', $this->_vars->get('description'));
-        $this->_calendar->set('params', serialize(array('fbrelevance' => (int) $this->_vars->get('fbrelevance', 0))));
+
+        $original_name = $this->_calendar->get('name');
+        if ($this->_calendar->get('owner') == Auth::getAuth()) {
+            $new_name = $this->_vars->get('name');
+            $this->_calendar->set('name', $new_name);
+            $params = array('fbrelevance' => (int) $this->_vars->get('fbrelevance', 0));
+        } else {
+            $new_name = $original_name;
+        }
+
+        if ($this->_vars->get('activesync_devices', '')) {
+            $ids = explode('|', $this->_vars->get('activesync_devices', ''));
+            foreach ($ids as $id) {
+                $sync = (int) $this->_vars->get('activesync_' . $id, 0);
+                if ($sync === 0 || $sync === 1 || $sync === 2) {
+                    $params['activesync']['FOLDER'][$id]['S'] = $sync;
+                }
+            }
+        }
+
+        $this->_calendar->set('params', serialize($params));
 
         if ($original_name != $new_name) {
             $result = $GLOBALS['kronolith_driver']->rename($original_name, $new_name);
